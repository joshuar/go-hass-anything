# Copyright (c) 2023 Joshua Rich <joshua.rich@gmail.com>
#
# This software is released under the MIT License.
# https://opensource.org/licenses/MIT

name: build

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}

on:
  push:
    branches:
      - main

permissions:
  contents: read      

jobs:
  check_release:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      pull-requests: write    
    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
      release_tag: ${{ steps.release_please.outputs.tag_name }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}
      - name: Run release please
        id: release_please
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: go
          token: ${{ secrets.GITHUB_TOKEN }}
  build-push-image:
    needs: check_release
    permissions:
      contents: write
      packages: write    
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        run: | 
          echo "APPVERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          # platform=${{ matrix.platform }}
          # echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Set app version for release
        if: ${{ needs.check_release.outputs.release_created }}
        run: echo "APPVERSION=${{ needs.check_release.outputs.release_tag }}" >> $GITHUB_ENV
      - name: Log in to the Container registry
        id: registry_login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Docker metadata
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            type=raw,value=latest
            type=edge
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=raw,value=${{ env.APPVERSION }}
      - name: Build container image
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
      - name: Check and install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.2'
      - name: Sign image with a key
        env:
          DIGEST: ${{ steps.build_image.outputs.digest }}
          TAGS: ${{ steps.docker_metadata.outputs.tags }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PWD }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign --verbose=true sign --yes --key cosign.key \
            -a "repo=${{ github.repository }}" \
            -a "ref=${{ github.ref }}" \
            ${images}
              