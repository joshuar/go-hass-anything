name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '11 0 * * 5'
  workflow_dispatch:

permissions:
  contents: read

env:
  GO_VERSION: 1.22

jobs:
  analyze:
    permissions:
      packages: read
      actions: read
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: go
          build-mode: manual        
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v1
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs      
    - name: Checkout repository
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      with:
        fetch-depth: 0
    - name: Setup Go
      id: setup_go
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Install Go dependencies
      id: install_go_deps
      run: |
        go install golang.org/x/tools/cmd/stringer@latest
        go install github.com/matryer/moq@latest     
    - name: Initialize CodeQL
      uses: github/codeql-action/init@8f1a6fed33af5212fab8a999d004627ae8901d1b # v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        packs: githubsecuritylab/codeql-${{ matrix.language }}-queries        
    - name: Build agent
      run: |
        mkdir apps && cp -a pkg/apps/exampleapp apps
        go generate -v ./...
        go build -v
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@8f1a6fed33af5212fab8a999d004627ae8901d1b # v3
      with:
        category: "/language:${{matrix.language}}"